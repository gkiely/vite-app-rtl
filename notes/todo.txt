- Sharing state between routes
  - Render a second page with the count

  Some options:
  - Current route calls nextRoute with appropriate state, which then calls onEnter
  - onEnter has access to state
  - Global store


- Array support for routes


- Setup / example using route and components
  - Create a Header component
  - Create a List component

- Add types to components that are then passed to route


- Server render / and add to readme (client and server rendering)
- Setup machine

- See why the switch case didn't fail without a default



Then
- Add error boundary
- File typescript bug for object spread

- Write an eslint plugin to require a catch block for async
- Add type builder for hono

- Allow actions
- Allow using machines
- Ability to go from update -> createMachine

- Front end deploy to pages
- Server deploy to workers


V2
- Setup time travel debugging
- Add a check for combining reducers, making sure duplicate actions aren't used
- Ability to create sub routes
  - Essentially I can break out an existing route, create a new one and have it be used
    - I will have to think about how this would work with send
    - Either via passing the prop to the component, or potentially having sub routes via the url, that then direct where they are sent
      /home
      /home/posts
  - Ability to createRenderer in render function

Later
- Setup node vite plugin so node updates trigger a hot module reload
- Try miniflare instead of wrangler? Or just wait until js api is supported in wrangler
https://github.com/cloudflare/miniflare
https://github.com/cloudflare/wrangler2/issues/771
